image: amazon/aws-cli
pipelines:
  pull-requests:
    "**":
      - step:
          name: Build & Run PR Agent
          runs-on:
            - self.hosted
            - linux
          image: python:3.10
          services:
            - docker
          script:
            - docker pull codiumai/pr-agent:latest
            - docker tag codiumai/pr-agent:latest pr-agent-cached
            - docker run -e CONFIG.GIT_PROVIDER=bitbucket -e CONFIG.MODEL=gemini/gemini-2.0-flash -e GOOGLE_AI_STUDIO.GEMINI_API_KEY=$GEMINI_API_KEY -e BITBUCKET.BEARER_TOKEN=$BITBUCKET_BEARER_TOKEN pr-agent-cached --pr_url=https://bitbucket.org/$BITBUCKET_WORKSPACE/$BITBUCKET_REPO_SLUG/pull-requests/$BITBUCKET_PR_ID describe
            - docker run -e CONFIG.GIT_PROVIDER=bitbucket -e CONFIG.MODEL=gemini/gemini-2.0-flash -e GOOGLE_AI_STUDIO.GEMINI_API_KEY=$GEMINI_API_KEY -e BITBUCKET.BEARER_TOKEN=$BITBUCKET_BEARER_TOKEN pr-agent-cached --pr_url=https://bitbucket.org/$BITBUCKET_WORKSPACE/$BITBUCKET_REPO_SLUG/pull-requests/$BITBUCKET_PR_ID review
            - docker run -e CONFIG.GIT_PROVIDER=bitbucket -e CONFIG.MODEL=gemini/gemini-2.0-flash -e GOOGLE_AI_STUDIO.GEMINI_API_KEY=$GEMINI_API_KEY -e BITBUCKET.BEARER_TOKEN=$BITBUCKET_BEARER_TOKEN pr-agent-cached --pr_url=https://bitbucket.org/$BITBUCKET_WORKSPACE/$BITBUCKET_REPO_SLUG/pull-requests/$BITBUCKET_PR_ID improve
          caches:
            - docker
  branches:
    staging:
      - step:
          name: Test
          runs-on:
            - self.hosted
            - linux.arm64
          image: golang:1.23.0
          script:
            - make test/coverage
      - step:
          name: Build and Publish
          runs-on:
            - self.hosted
            - linux.arm64
          services:
            - docker
          script:
            - export REGISTRY=registry-stage.qiscus.io/integration/
            - export PROJECT="${BITBUCKET_REPO_SLUG}-${BITBUCKET_BRANCH}"
            - export IMAGE="${REGISTRY}${PROJECT}"
            - export DOCKER_BUILDKIT=1
            - docker build -t $IMAGE:$BITBUCKET_BUILD_NUMBER --platform linux/arm64 .
            - echo ${HARBOR_PASSWORD} | docker login registry-stage.qiscus.io --username ${HARBOR_USER} --password-stdin
            - docker push $IMAGE:$BITBUCKET_BUILD_NUMBER
            - echo $IMAGE:$BITBUCKET_BUILD_NUMBER
      - step:
          name: Update Central Application
          runs-on:
            - self.hosted
            - linux
          image:
            name: registry-stage.qiscus.io/integration/central-command:stable
            username: $HARBOR_USER
            password: $HARBOR_PASSWORD
          deployment: staging
          script:
            - export REGISTRY=registry-stage.qiscus.io/integration/
            - export PROJECT="${BITBUCKET_REPO_SLUG}-${BITBUCKET_BRANCH}"
            - export IMAGE="${REGISTRY}${PROJECT}"
            - chmod +x /app/central
            - /app/central -n $PROJECT -i $IMAGE:$BITBUCKET_BUILD_NUMBER

            # Optional: Enable this block only if the service has cron jobs
            # - export PROJECT_CRON="${BITBUCKET_REPO_SLUG}-cron-${BITBUCKET_BRANCH}"
            # - /app/central -n $PROJECT_CRON -i $IMAGE:$BITBUCKET_BUILD_NUMBER
options:
  docker: true
